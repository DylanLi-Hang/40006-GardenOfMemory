#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Idle", "waterDrop"]
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def "waterDrop" (
        active = true
        references = @waterDrop.usdz@
    )
    {
        reorder nameChildren = ["Idle", "Materials", "Meshes"]
        float3 xformOp:translate = (0, -0.2087214, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "Idle" (
            active = true
            references = @Idle.usdz@
        )
        {
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Meshes"
            {
                reorder nameChildren = ["Sketchfab_model", "Materials"]
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                over "Sketchfab_model"
                {
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    over "_f200c4c2cc5428e918e9a353aec110b_fbx"
                    {
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        over "RootNode"
                        {
                            reorder nameChildren = ["Materials", "WaterL"]
                            float3 xformOp:scale = (0.1, 0.1, 0.1)
                            float3 xformOp:translate = (0, 1, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                            over "WaterL"
                            {
                                over "WaterBody1L" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </Root/waterDrop/Idle/Materials_1/WaterBody1> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                    over "WaterBody1L_WaterBody1_0"
                                    {
                                        quatf xformOp:orient = (1, 0, 0, 0)
                                        float3 xformOp:scale = (1.0000001, 1, 1)
                                        float3 xformOp:translate = (0, 0, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                        over "WaterBody1L_WaterBody1_0" (
                                            prepend apiSchemas = ["MaterialBindingAPI"]
                                        )
                                        {
                                            rel material:binding = None (
                                                bindMaterialAs = "weakerThanDescendants"
                                            )
                                            float3 xformOp:translate = (0, 0, 0)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                        }
                                    }
                                }

                                over "WaterBody2L" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </Root/waterDrop/Idle/Materials_1/WaterBody2> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                    over "WaterBody2L_WaterBody2_0"
                                    {
                                        quatf xformOp:orient = (1, 0, 0, 0)
                                        float3 xformOp:scale = (1.0000001, 1, 1)
                                        float3 xformOp:translate = (0, 0, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                        over "WaterBody2L_WaterBody2_0" (
                                            prepend apiSchemas = ["MaterialBindingAPI"]
                                        )
                                        {
                                            rel material:binding = None (
                                                bindMaterialAs = "weakerThanDescendants"
                                            )
                                            float3 xformOp:translate = (0, 0, 0)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                        }
                                    }
                                }

                                over "WaterEyesL" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </Root/waterDrop/Idle/Materials_1/Eyes> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                    over "WaterEyesL_Eyes_0"
                                    {
                                        quatf xformOp:orient = (1, 0, 0, 0)
                                        float3 xformOp:scale = (1.0000001, 1, 1)
                                        float3 xformOp:translate = (0, 0, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                        over "WaterEyesL_Eyes_0" (
                                            prepend apiSchemas = ["MaterialBindingAPI"]
                                        )
                                        {
                                            rel material:binding = </Root/waterDrop/Materials/Eyes> (
                                                bindMaterialAs = "weakerThanDescendants"
                                            )
                                            float3 xformOp:translate = (0, 0, 0)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                        }
                                    }
                                }
                            }

                            def Xform "Materials" (
                                references = </Root/waterDrop/Idle/Materials>
                            )
                            {
                                quatf xformOp:orient = (0.99999994, 0, 0, 0)
                                float3 xformOp:scale = (10.000001, 10.000001, 10.000001)
                                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                                float3 xformOp:translate = (0, -10.000001, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                            }
                        }
                    }
                }
            }

            over "Materials"
            {
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Scope "Materials_1" (
                prepend references = </Root/waterDrop/Materials>
            )
            {
                def Material "Eyes"
                {
                    token outputs:surface.connect = </Root/waterDrop/Idle/Materials_1/Eyes/pbr_shader.outputs:surface>

                    def Shader "pbr_shader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor.connect = </Root/waterDrop/Idle/Materials_1/Eyes/tex_base.outputs:rgb>
                        color3f inputs:emissiveColor = (0, 0, 0)
                        float inputs:metallic.connect = </Root/waterDrop/Idle/Materials_1/Eyes/tex_metallic.outputs:r>
                        normal3f inputs:normal.connect = </Root/waterDrop/Idle/Materials_1/Eyes/tex_normal.outputs:rgb>
                        float inputs:occlusion = 1
                        float inputs:roughness.connect = </Root/waterDrop/Idle/Materials_1/Eyes/tex_roughness.outputs:r>
                        token outputs:surface
                    }

                    def Shader "uvset0"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname = "st0"
                        float2 outputs:result
                    }

                    def Shader "tex_base"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 1, 1, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:a
                        float3 outputs:rgb
                    }

                    def Shader "tex_metallic"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (0, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_roughness"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_normal"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:bias = (-1, -1, -1, -1)
                        float4 inputs:fallback = (0, 0, 1, 1)
                        asset inputs:file
                        float4 inputs:scale = (2, 2, 2, 2)
                        token inputs:sourceColorSpace = "raw"
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float3 outputs:rgb
                    }
                }

                def Material "WaterBody1"
                {
                    token outputs:surface.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/pbr_shader.outputs:surface>

                    def Shader "pbr_shader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/tex_base.outputs:rgb>
                        color3f inputs:emissiveColor = (0, 0, 0)
                        float inputs:metallic.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/tex_metallic.outputs:r>
                        normal3f inputs:normal.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/tex_normal.outputs:rgb>
                        float inputs:occlusion = 1
                        float inputs:roughness.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/tex_roughness.outputs:r>
                        token outputs:surface
                    }

                    def Shader "uvset0"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname = "st0"
                        float2 outputs:result
                    }

                    def Shader "tex_base"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 1, 1, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:a
                        float3 outputs:rgb
                    }

                    def Shader "tex_metallic"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (0, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_roughness"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_normal"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:bias = (-1, -1, -1, -1)
                        float4 inputs:fallback = (0, 0, 1, 1)
                        asset inputs:file
                        float4 inputs:scale = (2, 2, 2, 2)
                        token inputs:sourceColorSpace = "raw"
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float3 outputs:rgb
                    }
                }

                def Material "WaterBody2"
                {
                    token outputs:surface.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/pbr_shader.outputs:surface>

                    def Shader "pbr_shader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/tex_base.outputs:rgb>
                        color3f inputs:emissiveColor = (0, 0, 0)
                        float inputs:metallic.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/tex_metallic.outputs:r>
                        normal3f inputs:normal.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/tex_normal.outputs:rgb>
                        float inputs:occlusion = 1
                        float inputs:roughness.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/tex_roughness.outputs:r>
                        token outputs:surface
                    }

                    def Shader "uvset0"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname = "st0"
                        float2 outputs:result
                    }

                    def Shader "tex_base"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 1, 1, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:a
                        float3 outputs:rgb
                    }

                    def Shader "tex_metallic"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (0, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_roughness"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_normal"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:bias = (-1, -1, -1, -1)
                        float4 inputs:fallback = (0, 0, 1, 1)
                        asset inputs:file
                        float4 inputs:scale = (2, 2, 2, 2)
                        token inputs:sourceColorSpace = "raw"
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_1/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float3 outputs:rgb
                    }
                }
            }

            def Scope "Materials_2" (
                prepend references = </Root/waterDrop/Materials>
            )
            {
                def Material "Eyes"
                {
                    token outputs:surface.connect = </Root/waterDrop/Idle/Materials_2/Eyes/pbr_shader.outputs:surface>

                    def Shader "pbr_shader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor.connect = </Root/waterDrop/Idle/Materials_2/Eyes/tex_base.outputs:rgb>
                        color3f inputs:emissiveColor = (0, 0, 0)
                        float inputs:metallic.connect = </Root/waterDrop/Idle/Materials_2/Eyes/tex_metallic.outputs:r>
                        normal3f inputs:normal.connect = </Root/waterDrop/Idle/Materials_2/Eyes/tex_normal.outputs:rgb>
                        float inputs:occlusion = 1
                        float inputs:roughness.connect = </Root/waterDrop/Idle/Materials_2/Eyes/tex_roughness.outputs:r>
                        token outputs:surface
                    }

                    def Shader "uvset0"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname = "st0"
                        float2 outputs:result
                    }

                    def Shader "tex_base"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 1, 1, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:a
                        float3 outputs:rgb
                    }

                    def Shader "tex_metallic"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (0, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_roughness"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_normal"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:bias = (-1, -1, -1, -1)
                        float4 inputs:fallback = (0, 0, 1, 1)
                        asset inputs:file
                        float4 inputs:scale = (2, 2, 2, 2)
                        token inputs:sourceColorSpace = "raw"
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/Eyes/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float3 outputs:rgb
                    }
                }

                def Material "WaterBody1"
                {
                    token outputs:surface.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/pbr_shader.outputs:surface>

                    def Shader "pbr_shader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/tex_base.outputs:rgb>
                        color3f inputs:emissiveColor = (0, 0, 0)
                        float inputs:metallic.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/tex_metallic.outputs:r>
                        normal3f inputs:normal.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/tex_normal.outputs:rgb>
                        float inputs:occlusion = 1
                        float inputs:roughness.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/tex_roughness.outputs:r>
                        token outputs:surface
                    }

                    def Shader "uvset0"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname = "st0"
                        float2 outputs:result
                    }

                    def Shader "tex_base"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 1, 1, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:a
                        float3 outputs:rgb
                    }

                    def Shader "tex_metallic"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (0, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_roughness"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_normal"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:bias = (-1, -1, -1, -1)
                        float4 inputs:fallback = (0, 0, 1, 1)
                        asset inputs:file
                        float4 inputs:scale = (2, 2, 2, 2)
                        token inputs:sourceColorSpace = "raw"
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody1/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float3 outputs:rgb
                    }
                }

                def Material "WaterBody2"
                {
                    token outputs:surface.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/pbr_shader.outputs:surface>

                    def Shader "pbr_shader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/tex_base.outputs:rgb>
                        color3f inputs:emissiveColor = (0, 0, 0)
                        float inputs:metallic.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/tex_metallic.outputs:r>
                        normal3f inputs:normal.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/tex_normal.outputs:rgb>
                        float inputs:occlusion = 1
                        float inputs:roughness.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/tex_roughness.outputs:r>
                        token outputs:surface
                    }

                    def Shader "uvset0"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname = "st0"
                        float2 outputs:result
                    }

                    def Shader "tex_base"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 1, 1, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:a
                        float3 outputs:rgb
                    }

                    def Shader "tex_metallic"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (0, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_roughness"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:fallback = (1, 0, 0, 1)
                        asset inputs:file
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float outputs:r
                    }

                    def Shader "tex_normal"
                    {
                        uniform token info:id = "UsdUVTexture"
                        float4 inputs:bias = (-1, -1, -1, -1)
                        float4 inputs:fallback = (0, 0, 1, 1)
                        asset inputs:file
                        float4 inputs:scale = (2, 2, 2, 2)
                        token inputs:sourceColorSpace = "raw"
                        float2 inputs:st.connect = </Root/waterDrop/Idle/Materials_2/WaterBody2/uvset0.outputs:result>
                        token inputs:wrapS = "repeat"
                        token inputs:wrapT = "repeat"
                        float3 outputs:rgb
                    }
                }
            }
        }

        over "Meshes" (
            active = false
        )
        {
        }
    }
}

